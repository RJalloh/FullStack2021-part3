{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","services/phonebook.js","Components/Person.js","Components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","f1","n1","n2","h1","h2","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","handleDelete","name","number","onClick","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setnewFilter","setMessage","msgType","setMsgType","useEffect","personService","initialPersons","popUp","msg","setTimeout","entriesToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","every","returnedPerson","concat","window","confirm","previousPerson","find","n","catch","error","console","log","map","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93038d04.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = ({value, onChange}) => {\n    return (\n    <div>\n        filter shown with <input value={value} onChange={onChange} />\n    </div>\n    )\n}\n\nexport default Filter\n","import React from 'react'\n\n\nconst PersonForm = ({f1, n1, n2, h1, h2}) => {\n    return (\n        <form onSubmit={f1} >\n            <div>name: <input value ={n1} onChange={h1} /> </div>\n            <div>number: <input value ={n2} onChange={h2} /> </div>\n            <div><button type = 'submit'>add</button></div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll, create, update, del}","import React from 'react'\n\nconst Person =({person, handleDelete}) => {\n    return (\n        <li>\n            {person.name} {person.number}\n            <button onClick={handleDelete}>delete</button>\n        </li>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({message, type}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={type}>\n            {message}\n        </div>\n    )   \n}\n\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport Filter from './Components/Filter'\nimport PersonForm from './Components/PersonForm'\nimport personService from \"./services/phonebook\"\nimport Person from \"./Components/Person\"\nimport Notification from \"./Components/Notification\"\nimport \"./index.css\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setnewFilter ] = useState('')\n  const [ message, setMessage] = useState(null)\n  const [ msgType, setMsgType] = useState('')\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n    })\n  }, [] )\n\n  const popUp = (msg, name) => {\n    setNewName('')\n    setNewNumber('')\n    setMsgType(\"positive\")\n    setMessage(msg, name)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.every( person => person.name !== newName)) {\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n      })\n      popUp('Added', personObject.name)  \n\n      }\n    else { // Update Person\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const previousPerson = persons.find( n => n.name === personObject.name)\n      personService\n      .update(previousPerson.id, personObject)\n      .then(returnedPerson => {\n        setPersons(persons.filter( person => person.name !== returnedPerson.name).concat(returnedPerson))\n      })\n      .catch(error => {\n        setMsgType(\"error\")\n        setMessage(`Information of ${personObject.name} has already been removed from server`)\n      })\n      popUp('Updated', personObject.name)\n    }\n\n  }\n  }\n \n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n      personService\n      .del(person.id)\n      .then(deletedPerson => {\n        setPersons(persons.filter( person => person.name !== deletedPerson.name))\n      })\n      popUp('Removed', person.name)\n    }\n  }\n\n  const entriesToShow = persons.filter( person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={msgType} />\n      <Filter value={newFilter} onChange={ event => setnewFilter(event.target.value)} />\n\n      <h2>add a new</h2>\n      <PersonForm f1={addPerson} n1={newName} n2={newNumber} h1={handleNameChange} h2={handleNumberChange} />\n\n      <h2>Numbers</h2>\n      <ul>\n        {entriesToShow.map( person => \n        <Person key={person.name} person={person} handleDelete={() => handleDelete(person) }/>)}\n        </ul>\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}